// Given a list of word lists How to print all sentences possible taking 
// one word from a list at a time via recursion 

// Example 
// Input - {{"you" , "we"},
//            {"have" , "are"},
//            {"sleep" , "eat" , "drink"}}
// Output - you have sleep
//          you have eat
//          you have drink
//          you are sleep
//          you are eat
//          you are drink
//          we have sleep
//          we have eat
//          we have drink
//          we are sleep
//          we are eat
//          we are drink 
// Approach : The idea is based on a simple depth-first traversal. We start from every word of 
// the first list as the first word of an output sentence, then recur for the remaining lists.

// C++ program to print all possible sentences from a list of word list
#include <iostream>
#include <string>

#define R 3
#define C 3
using namespace std;

void printUtil(string arr[R][C], int m, int n, string output[R])
{
	output[m] = arr[m][n];
	if (m==R-1)
	{
		for (int i=0; i<R; i++)
		cout << output[i] << " ";
		cout << endl;
		return;
	}
	for (int i=0; i<C; i++)
	    if (arr[m+1][i] != "")
		    printUtil(arr, m+1, i, output);
}
void print(string arr[R][C])
{
    string output[R];
    for (int i=0; i<C; i++)
	    if (arr[0][i] != "")
		    printUtil(arr, 0, i, output);
}

int main()
{
    string arr[R][C] = {{"you", "we"},
                            {"have", "are"},
                            {"sleep", "eat", "drink"}};
    print(arr);
    return 0;
}
