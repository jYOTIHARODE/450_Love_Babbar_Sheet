//Method2
//One by one fix characters and recursively generates all subsets starting from them. 
// After every recursive call, we remove last character so that the next permutation can be generated. 
#include<bits/stdc++.h>
using namespace std;

void printSubseq(string str,int n,int index=-1,string curr = "")
{
    if(index==n)    return;
    if(!curr.empty())   cout<<curr<<" ";
    for(int i=index+1 ; i<n ; i++)
    {
        curr+=str[i];
        printSubseq(str,n,i,curr);
        curr = curr.erase(curr.size()-1);
    }
    return;
}

void print(string str)
{
    printSubseq(str,str.size());
}

int main()
{
    string str = "abc";
    print(str);
    return 0;
}

