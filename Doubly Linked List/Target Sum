// Time complexity : O(n) 
// Auxiliary space : O(1)
#include<bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    struct Node *prev;
    struct Node *next;
};

void pairSum(struct Node *head , int x)
{
    struct Node *first = head;
    struct Node *second = head;
    while(second->next !=nullptr)
        second = second->next;

    bool found = false;//pair  find or not 
    while(first!=second && second->next!=first)
    {
        if((first->data + second->data)==x)
        {
            found = true;
            cout<<"("<<first->data<<","<<second->data<<")"<<endl;
            first = first->next;
            second = second->prev;
        }
        else
        {
            if(first->data + second->data)
                first = first->next;
            else
                second = second->prev;
        }
    }
    if(found==false)    cout<<"No pair found ";
}

void insert(struct Node **head , int data)
{
    struct Node *temp = new Node;
    temp->data = data;
    temp->next = temp->prev = nullptr;
    if(!(*head))
        (*head)=temp;
    else
    {
        temp->next = *head;
        (*head)->prev = temp;
        (*head) = temp;
    }
}

int main()
{
    struct Node*head = nullptr;
    insert(&head , 9);
    insert(&head , 8);
    insert(&head , 6);
    insert(&head , 5);
    insert(&head , 4);
    insert(&head , 2);
    insert(&head , 1);
    int x = 7;
    pairSum(head,x);
    return 0;
}
